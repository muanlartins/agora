
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$TabDeb-primary: mat.define-palette(mat.$orange-palette);
$TabDeb-accent: mat.define-palette(mat.$amber-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$TabDeb-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$TabDeb-theme: mat.define-light-theme((
  color: (
    primary: $TabDeb-primary,
    accent: $TabDeb-accent,
    warn: $TabDeb-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($TabDeb-theme);

@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;500;700&display=swap');

@font-face {
  font-family: 'Satoshi';
  src: url('./assets/fonts/Satoshi-Light.otf');
  font-weight: 300;
}

@font-face {
  font-family: 'Satoshi';
  src: url('./assets/fonts/Satoshi-Regular.otf');
  font-weight: 400;
}

@font-face {
  font-family: 'Satoshi';
  src: url('./assets/fonts/Satoshi-Medium.otf');
  font-weight: 500;
}

* {
	margin: 0;
	padding: 0;
  font-family: 'Open Sans';
}

html, body { height: 100%; }

.cdk-drag-preview {
  box-sizing: border-box;
  border-radius: 4px;
  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),
              0 8px 10px 1px rgba(0, 0, 0, 0.14),
              0 3px 14px 2px rgba(0, 0, 0, 0.12);
}

.cdk-drag-animating {
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}
